{"ast":null,"code":"var _jsxFileName = \"/home/gunter_/MVP/agriconnect-front/src/components/SignupPage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/Signup.css\";\n\n// const SignupPage = () => {\n//   const [phone, setPhone] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [region, setRegion] = useState(\"\");\n//   const [surface, setSurface] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [step, setStep] = useState(1);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const regions = [\"Cotonou\", \"Porto-Novo\", \"Parakou\", \"Abomey\"];\n//   const surfaces = [\"1-2 ha\", \"3-4 ha\", \"5+ ha\"];\n\n//   const validatePhone = (phone) => {\n//     const phoneRegex = /^\\+?[0-9]{8,15}$/;\n//     return phoneRegex.test(phone);\n//   };\n\n//   const validateEmail = (email) => {\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     return emailRegex.test(email);\n//   };\n\n//   const handleSubmit = async () => {\n//     setError(\"\");\n//     if (!validatePhone(phone) || !name || !region || !surface || !email || !password) {\n//       setError(\"Please fill in all the required fields with valid data.\");\n//       return;\n//     }\n\n//     if (!validateEmail(email)) {\n//       setError(\"Please enter a valid email address.\");\n//       return;\n//     }\n\n//     try {\n//       const userData = { phone, name, region, surface, email, password };\n//       await new Promise(resolve => setTimeout(resolve, 1000));\n//       console.log(\"User registered:\", userData);\n\n//       // Update authentication state\n//       localStorage.setItem(\"isAuthenticated\", \"true\");\n\n//       setStep(2);\n\n//       setTimeout(() => {\n//         navigate(\"/plan-selection\");\n//       }, 2000);\n//     } catch (error) {\n//       setError(\"Error during registration\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <div className=\"signup-card\">\n//         <div className=\"logo-container\">\n//           <h1 className=\"app-title\">AgriConnect</h1>\n//           <p className=\"app-subtitle\">Let's grow the future together</p>\n//         </div>\n\n//         <h2>Sign Up</h2>\n//         {error && <div className=\"error-message\">{error}</div>}\n\n//         {step === 1 && (\n//           <div className=\"form-container\">\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon phone-icon\"></i>\n//                 Phone Number*\n//               </label>\n//               <input\n//                 type=\"tel\"\n//                 value={phone}\n//                 onChange={(e) => setPhone(e.target.value)}\n//                 placeholder=\"Ex: +22967000000\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon user-icon\"></i>\n//                 Full Name*\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//                 placeholder=\"Your full name\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon email-icon\"></i>\n//                 Email*\n//               </label>\n//               <input\n//                 type=\"email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 placeholder=\"example@email.com\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon lock-icon\"></i>\n//                 Password*\n//               </label>\n//               <input\n//                 type=\"password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 placeholder=\"Your password\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon location-icon\"></i>\n//                 Region/City*\n//               </label>\n//               <select value={region} onChange={(e) => setRegion(e.target.value)}>\n//                 <option value=\"\">Select...</option>\n//                 {regions.map((reg) => (\n//                   <option key={reg} value={reg}>{reg}</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon field-icon\"></i>\n//                 Farm Size*\n//               </label>\n//               <select value={surface} onChange={(e) => setSurface(e.target.value)}>\n//                 <option value=\"\">Select...</option>\n//                 {surfaces.map((surf) => (\n//                   <option key={surf} value={surf}>{surf}</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <button className=\"submit-button\" onClick={handleSubmit}>\n//               Sign Up\n//             </button>\n\n//             <div className=\"login-link\">\n//               Already a member? <a href=\"/login\">Log in</a>\n//             </div>\n//           </div>\n//         )}\n\n//         {step === 2 && (\n//           <div className=\"success-message\">\n//             <div className=\"success-icon\">âœ…</div>\n//             <h3>Registration Successful!</h3>\n//             <p>You will be redirected to the login page</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SignupPage;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupPage = () => {\n  _s();\n  const [phone, setPhone] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [surface, setSurface] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const regions = [\"Cotonou\", \"Porto-Novo\", \"Parakou\", \"Abomey\"];\n  const surfaces = [\"1-2 ha\", \"3-4 ha\", \"5+ ha\"];\n  const validatePhone = phone => /^\\+?[0-9]{8,15}$/.test(phone);\n  const validateEmail = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  const handleSubmit = async () => {\n    setError(\"\");\n    if (!validatePhone(phone) || !name || !region || !surface || !email || !password) {\n      setError(\"Please fill in all fields with valid data.\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:3000/auth/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          phone,\n          name,\n          region,\n          surface,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || \"Registration failed\");\n      localStorage.setItem(\"token\", data.token);\n      navigate(\"/dashboard\");\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signup-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"AgriConnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"app-subtitle\",\n        children: \"Let's grow the future together\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          placeholder: \"Phone Number*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"Full Name*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: region,\n          onChange: e => setRegion(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Region*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), regions.map(reg => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: reg,\n            children: reg\n          }, reg, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 35\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: surface,\n          onChange: e => setSurface(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Farm Size*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), surfaces.map(surf => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: surf,\n            children: surf\n          }, surf, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 37\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: handleSubmit,\n          disabled: loading,\n          children: loading ? \"Signing up...\" : \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-link\",\n          children: [\"Already a member? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupPage, \"MU+T1MY2ZjP0lc7tBVwrlHKy/LQ=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignupPage","_s","phone","setPhone","name","setName","region","setRegion","surface","setSurface","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","regions","surfaces","validatePhone","test","validateEmail","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","localStorage","setItem","token","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","reg","surf","onClick","disabled","href","_c","$RefreshReg$"],"sources":["/home/gunter_/MVP/agriconnect-front/src/components/SignupPage.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import \"../styles/Signup.css\";\n\n// const SignupPage = () => {\n//   const [phone, setPhone] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n//   const [region, setRegion] = useState(\"\");\n//   const [surface, setSurface] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [step, setStep] = useState(1);\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   const regions = [\"Cotonou\", \"Porto-Novo\", \"Parakou\", \"Abomey\"];\n//   const surfaces = [\"1-2 ha\", \"3-4 ha\", \"5+ ha\"];\n\n//   const validatePhone = (phone) => {\n//     const phoneRegex = /^\\+?[0-9]{8,15}$/;\n//     return phoneRegex.test(phone);\n//   };\n\n//   const validateEmail = (email) => {\n//     const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n//     return emailRegex.test(email);\n//   };\n\n//   const handleSubmit = async () => {\n//     setError(\"\");\n//     if (!validatePhone(phone) || !name || !region || !surface || !email || !password) {\n//       setError(\"Please fill in all the required fields with valid data.\");\n//       return;\n//     }\n\n//     if (!validateEmail(email)) {\n//       setError(\"Please enter a valid email address.\");\n//       return;\n//     }\n\n//     try {\n//       const userData = { phone, name, region, surface, email, password };\n//       await new Promise(resolve => setTimeout(resolve, 1000));\n//       console.log(\"User registered:\", userData);\n\n//       // Update authentication state\n//       localStorage.setItem(\"isAuthenticated\", \"true\");\n\n//       setStep(2);\n\n//       setTimeout(() => {\n//         navigate(\"/plan-selection\");\n//       }, 2000);\n//     } catch (error) {\n//       setError(\"Error during registration\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"signup-container\">\n//       <div className=\"signup-card\">\n//         <div className=\"logo-container\">\n//           <h1 className=\"app-title\">AgriConnect</h1>\n//           <p className=\"app-subtitle\">Let's grow the future together</p>\n//         </div>\n        \n//         <h2>Sign Up</h2>\n//         {error && <div className=\"error-message\">{error}</div>}\n        \n//         {step === 1 && (\n//           <div className=\"form-container\">\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon phone-icon\"></i>\n//                 Phone Number*\n//               </label>\n//               <input\n//                 type=\"tel\"\n//                 value={phone}\n//                 onChange={(e) => setPhone(e.target.value)}\n//                 placeholder=\"Ex: +22967000000\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon user-icon\"></i>\n//                 Full Name*\n//               </label>\n//               <input\n//                 type=\"text\"\n//                 value={name}\n//                 onChange={(e) => setName(e.target.value)}\n//                 placeholder=\"Your full name\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon email-icon\"></i>\n//                 Email*\n//               </label>\n//               <input\n//                 type=\"email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 placeholder=\"example@email.com\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon lock-icon\"></i>\n//                 Password*\n//               </label>\n//               <input\n//                 type=\"password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 placeholder=\"Your password\"\n//               />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon location-icon\"></i>\n//                 Region/City*\n//               </label>\n//               <select value={region} onChange={(e) => setRegion(e.target.value)}>\n//                 <option value=\"\">Select...</option>\n//                 {regions.map((reg) => (\n//                   <option key={reg} value={reg}>{reg}</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <i className=\"icon field-icon\"></i>\n//                 Farm Size*\n//               </label>\n//               <select value={surface} onChange={(e) => setSurface(e.target.value)}>\n//                 <option value=\"\">Select...</option>\n//                 {surfaces.map((surf) => (\n//                   <option key={surf} value={surf}>{surf}</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <button className=\"submit-button\" onClick={handleSubmit}>\n//               Sign Up\n//             </button>\n\n//             <div className=\"login-link\">\n//               Already a member? <a href=\"/login\">Log in</a>\n//             </div>\n//           </div>\n//         )}\n\n//         {step === 2 && (\n//           <div className=\"success-message\">\n//             <div className=\"success-icon\">âœ…</div>\n//             <h3>Registration Successful!</h3>\n//             <p>You will be redirected to the login page</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default SignupPage;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/Signup.css\";\n\nconst SignupPage = () => {\n  const [phone, setPhone] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [region, setRegion] = useState(\"\");\n  const [surface, setSurface] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  \n  const navigate = useNavigate();\n  const regions = [\"Cotonou\", \"Porto-Novo\", \"Parakou\", \"Abomey\"];\n  const surfaces = [\"1-2 ha\", \"3-4 ha\", \"5+ ha\"];\n\n  const validatePhone = (phone) => /^\\+?[0-9]{8,15}$/.test(phone);\n  const validateEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n  const handleSubmit = async () => {\n    setError(\"\");\n    if (!validatePhone(phone) || !name || !region || !surface || !email || !password) {\n      setError(\"Please fill in all fields with valid data.\");\n      return;\n    }\n\n    if (!validateEmail(email)) {\n      setError(\"Please enter a valid email address.\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:3000/auth/register\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ phone, name, region, surface, email, password })\n      });\n      \n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || \"Registration failed\");\n      \n      localStorage.setItem(\"token\", data.token);\n      navigate(\"/dashboard\");\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"signup-container\">\n      <div className=\"signup-card\">\n        <h1 className=\"app-title\">AgriConnect</h1>\n        <p className=\"app-subtitle\">Let's grow the future together</p>\n        <h2>Sign Up</h2>\n        {error && <div className=\"error-message\">{error}</div>}\n        <div className=\"form-container\">\n          <input type=\"tel\" value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Phone Number*\" />\n          <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Full Name*\" />\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email*\" />\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password*\" />\n          <select value={region} onChange={(e) => setRegion(e.target.value)}>\n            <option value=\"\">Select Region*</option>\n            {regions.map((reg) => <option key={reg} value={reg}>{reg}</option>)}\n          </select>\n          <select value={surface} onChange={(e) => setSurface(e.target.value)}>\n            <option value=\"\">Select Farm Size*</option>\n            {surfaces.map((surf) => <option key={surf} value={surf}>{surf}</option>)}\n          </select>\n          <button className=\"submit-button\" onClick={handleSubmit} disabled={loading}>\n            {loading ? \"Signing up...\" : \"Sign Up\"}\n          </button>\n          <div className=\"login-link\">Already a member? <a href=\"/login\">Log in</a></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupPage;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}