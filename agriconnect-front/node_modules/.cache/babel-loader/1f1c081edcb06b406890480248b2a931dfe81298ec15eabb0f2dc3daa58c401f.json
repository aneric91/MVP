{"ast":null,"code":"var _jsxFileName = \"/home/gunter_/MVP/agriconnect-front/src/components/PlanSelection.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useNavigate } from \"react-router-dom\"; \n// import '../styles/PlanSelection.css';\n\n// const plans = [\n//   { name: \"Basic\", price: \"€10\", area: \"Up to 4 hectares\", includes: \"Fertilizer + Seeds\" },\n//   { name: \"Standard\", price: \"€20\", area: \"Up to 10 hectares\", includes: \"Fertilizer + Seeds + Pesticides\" },\n//   { name: \"Premium\", price: \"€30\", area: \"Up to 20 hectares\", includes: \"All inputs + Dedicated support\" },\n// ];\n\n// const PlanSelection = () => {\n//   const navigate = useNavigate();\n\n//   const handleSelection = (planName) => {\n//     navigate(`/payment?plan=${planName}`);\n//   };\n\n//   return (\n//     <div className=\"plans-container\">\n//       <div className=\"plans-wrapper\">\n//         <h1 className=\"plans-title\">Choose Your Plan</h1>\n\n//         <div className=\"plans-grid\">\n//           {plans.map((plan) => (\n//             <div key={plan.name} className=\"plan-card\">\n//               <div className=\"price-banner\">\n//                 {plan.price}/month\n//               </div>\n\n//               <div className=\"plan-content\">\n//                 <h2 className=\"plan-name\">{plan.name}</h2>\n\n//                 <div className=\"features-list\">\n//                   <div className=\"feature-item\">\n//                     <svg className=\"check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n//                     </svg>\n//                     {plan.area}\n//                   </div>\n\n//                   <div className=\"feature-item\">\n//                     <svg className=\"check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n//                     </svg>\n//                     {plan.includes}\n//                   </div>\n//                 </div>\n\n//                 <button\n//                   onClick={() => handleSelection(plan.name)}\n//                   className=\"select-button\"\n//                 >\n//                   Select\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PlanSelection;\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/PlanSelection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst plans = [{\n  name: \"Basic\",\n  price: \"€10\",\n  area: \"Up to 4 hectares\",\n  includes: \"Fertilizer + Seeds\"\n}, {\n  name: \"Standard\",\n  price: \"€20\",\n  area: \"Up to 10 hectares\",\n  includes: \"Fertilizer + Seeds + Pesticides\"\n}, {\n  name: \"Premium\",\n  price: \"€30\",\n  area: \"Up to 20 hectares\",\n  includes: \"All inputs + Dedicated support\"\n}];\nconst PlanSelection = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleSelection = async planName => {\n    try {\n      // Récupérer le token JWT depuis localStorage\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"You must be logged in to select a plan.\");\n        return;\n      }\n\n      // Appeler le backend pour enregistrer l'abonnement sélectionné\n      const response = await fetch(\"http://localhost:5000/subscriptions/choose\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          planName\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(data.error);\n        return;\n      }\n      alert(\"Plan selected successfully!\");\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Error selecting plan:\", error);\n      alert(\"Error selecting plan.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"plans-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plans-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"plans-title\",\n        children: \"Choose Your Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plans-grid\",\n        children: plans.map(plan => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-banner\",\n            children: [plan.price, \"/month\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"plan-name\",\n              children: plan.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"features-list\",\n              children: [plan.area, plan.includes].map((feature, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feature-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                  className: \"check-icon\",\n                  fill: \"none\",\n                  stroke: \"currentColor\",\n                  viewBox: \"0 0 24 24\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\",\n                    strokeWidth: \"2\",\n                    d: \"M5 13l4 4L19 7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this), feature]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelection(plan.name),\n              className: \"select-button\",\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, plan.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(PlanSelection, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PlanSelection;\nexport default PlanSelection;\nvar _c;\n$RefreshReg$(_c, \"PlanSelection\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","plans","name","price","area","includes","PlanSelection","_s","navigate","handleSelection","planName","token","localStorage","getItem","alert","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","plan","feature","index","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","_c","$RefreshReg$"],"sources":["/home/gunter_/MVP/agriconnect-front/src/components/PlanSelection.js"],"sourcesContent":["// import React from \"react\";\n// import { useNavigate } from \"react-router-dom\"; \n// import '../styles/PlanSelection.css';\n\n// const plans = [\n//   { name: \"Basic\", price: \"€10\", area: \"Up to 4 hectares\", includes: \"Fertilizer + Seeds\" },\n//   { name: \"Standard\", price: \"€20\", area: \"Up to 10 hectares\", includes: \"Fertilizer + Seeds + Pesticides\" },\n//   { name: \"Premium\", price: \"€30\", area: \"Up to 20 hectares\", includes: \"All inputs + Dedicated support\" },\n// ];\n\n// const PlanSelection = () => {\n//   const navigate = useNavigate();\n\n//   const handleSelection = (planName) => {\n//     navigate(`/payment?plan=${planName}`);\n//   };\n\n//   return (\n//     <div className=\"plans-container\">\n//       <div className=\"plans-wrapper\">\n//         <h1 className=\"plans-title\">Choose Your Plan</h1>\n        \n//         <div className=\"plans-grid\">\n//           {plans.map((plan) => (\n//             <div key={plan.name} className=\"plan-card\">\n//               <div className=\"price-banner\">\n//                 {plan.price}/month\n//               </div>\n              \n//               <div className=\"plan-content\">\n//                 <h2 className=\"plan-name\">{plan.name}</h2>\n                \n//                 <div className=\"features-list\">\n//                   <div className=\"feature-item\">\n//                     <svg className=\"check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n//                     </svg>\n//                     {plan.area}\n//                   </div>\n                  \n//                   <div className=\"feature-item\">\n//                     <svg className=\"check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                       <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n//                     </svg>\n//                     {plan.includes}\n//                   </div>\n//                 </div>\n\n//                 <button\n//                   onClick={() => handleSelection(plan.name)}\n//                   className=\"select-button\"\n//                 >\n//                   Select\n//                 </button>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PlanSelection;\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\"; \nimport \"../styles/PlanSelection.css\";\n\nconst plans = [\n  { name: \"Basic\", price: \"€10\", area: \"Up to 4 hectares\", includes: \"Fertilizer + Seeds\" },\n  { name: \"Standard\", price: \"€20\", area: \"Up to 10 hectares\", includes: \"Fertilizer + Seeds + Pesticides\" },\n  { name: \"Premium\", price: \"€30\", area: \"Up to 20 hectares\", includes: \"All inputs + Dedicated support\" },\n];\n\nconst PlanSelection = () => {\n  const navigate = useNavigate();\n\n  const handleSelection = async (planName) => {\n    try {\n      // Récupérer le token JWT depuis localStorage\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"You must be logged in to select a plan.\");\n        return;\n      }\n      \n      // Appeler le backend pour enregistrer l'abonnement sélectionné\n      const response = await fetch(\"http://localhost:5000/subscriptions/choose\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`\n        },\n        body: JSON.stringify({ planName })\n      });\n      \n      const data = await response.json();\n      if (!response.ok) {\n        alert(data.error);\n        return;\n      }\n      \n      alert(\"Plan selected successfully!\");\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Error selecting plan:\", error);\n      alert(\"Error selecting plan.\");\n    }\n  };\n\n  return (\n    <div className=\"plans-container\">\n      <div className=\"plans-wrapper\">\n        <h1 className=\"plans-title\">Choose Your Plan</h1>\n        <div className=\"plans-grid\">\n          {plans.map((plan) => (\n            <div key={plan.name} className=\"plan-card\">\n              <div className=\"price-banner\">{plan.price}/month</div>\n              <div className=\"plan-content\">\n                <h2 className=\"plan-name\">{plan.name}</h2>\n                <div className=\"features-list\">\n                  {[plan.area, plan.includes].map((feature, index) => (\n                    <div key={index} className=\"feature-item\">\n                      <svg className=\"check-icon\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" />\n                      </svg>\n                      {feature}\n                    </div>\n                  ))}\n                </div>\n                <button onClick={() => handleSelection(plan.name)} className=\"select-button\">\n                  Select\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlanSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}